{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","class","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","type","msg","Navbar","className","mode","href","title","id","tabindex","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","name","cols","rows","backgroundColor","margin","width","height","console","log","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","n","length","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7fb088d4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\n// import {Link} from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li> */}\r\n\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link \" href=\"\" tabindex=\"-1\" aria-disabled=\"true\">Contact</a>\r\n                            </li>\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                        <div className={`form-check form-switch text-${props.mode === 'light'?'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode} Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\n\r\n\r\nfunction Textform(props) {\r\n    const [text, setText] = useState('');\r\n\r\n    const handleUpClick = () => {\r\n        console.log(\"button clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n    const handleDownClick = () => {\r\n        console.log(\"button clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        //console.log(\"button clicked\");\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\",\"success\");\r\n    }\r\n    const handleCopyClick = () => {\r\n        console.log(\"Copy button clicked\");\r\n        var newText = document.getElementById(\"myBox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\",\"success\");\r\n        \r\n    }\r\n    const handleExtraSpace=()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\",\"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h1>{props.heading}</h1>\r\n\r\n                <div className=\"mb-3\">\r\n\r\n                    <textarea value={text} onChange={handleOnChange} name=\"myBox\" id=\"myBox\" cols=\"30\" rows=\"10\"\r\n                     style={{color:props.mode==='dark'?'white':'black',backgroundColor:props.mode ==='dark'?'grey':'white',margin: '0px', width: '667px', height: '275px' }}></textarea>\r\n\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-2\" onClick={handleDownClick}>Convert To Lowercase</button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>Copy Text</button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").filter(function(n){\r\n                    return n!==''}).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text:\"Enter Something to Preview here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Textform;\r\n","import React, { useState } from 'react';\n// import { Route, Switch, BrowserRouter as Router } from 'react-router-dom'; \nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n\nfunction App() {\n  const [mode, setMode] = useState('dark');//Whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#274059';\n      showAlert('Dark mode has been enabled', 'success');\n      document.title = \"TextUtils - Dark mode\";\n\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n      document.title = \"TextUtils - Light mode\";\n    }\n\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/\"> */}\n              <Textform showAlert={showAlert} heading=\"Enter the Text to Analyse\" mode={mode} />\n            {/* </Route>\n          </Switch> */}\n\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}